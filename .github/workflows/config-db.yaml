name: Configure Database

on:
  workflow_dispatch:
    inputs:
      db-ip:
        type: string
        description: "Enter the public ip of the databse server"
        required: true
      

jobs:
  run-playbooks:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ansible

    steps: 
      - uses: actions/checkout@v3
        with:
          submodules: true
          # token: ${{secrets.REPO_TOKEN}}

      - name: Setup ssh
        shell: bash 
        run: |
          service ssh status
          eval `ssh-agent -s`
          mkdir -p /home/runner/.ssh/
          touch /home/runner/.ssh/id_rsa
          echo -e "${{secrets.VM_PRIV_KEY}}" > /home/runner/.ssh/id_rsa
          chmod 700 /home/runner/.ssh/id_rsa
          ssh-keyscan -t rsa,dsa,ecdsa,ed25519 ${{ inputs.db-ip }} >> /home/runner/.ssh/known_hosts

      - name: Configure Host host-inventory
        run: |
          cat <<EOF > host-inventory
          [postgres]
          ${{ inputs.db-ip }}
          EOF

      - name: configure ansible/var/main.yaml
    
        run: |
          cat <<EOF > main.yaml
          postgresql_databases:
            - name: ${{ secrets.DB_NAME }}
              port: 5432

          postgresql_users:
            - name: ${{ secrets.ANSIBLE_DEPLOY_USER }}
              password: ${{ secrets.DB_PWD }}


          postgresql_hba_entries:
            - {type: local, database: all, user: postgres, auth_method: peer}
            - {type: local, database: all, user: all, auth_method: peer}
            - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: "{{ postgresql_auth_method }}"}
            - {type: host, database: all, user: all, address: '::1/128', auth_method: "{{ postgresql_auth_method }}"}
            - {type: host, database: all, user: all, address: '0.0.0.0/0', auth_method: "md5"}


          # Global configuration options that will be set in postgresql.conf.
          postgresql_global_config_options:
            - option: unix_socket_directories
              value: '{{ postgresql_unix_socket_directories | join(",") }}'
            - option: log_directory
              value: 'log'
            - option: listen_addresses
              value: '*'
         
          postgres_users_no_log: false
          EOF

      - name: show the out put vars_files and move it
        run: |
          cat main.yaml
          mkdir var

          mv main.yaml ./var

          cd var && pwd && cat main.yaml
          



      - name: Run ansible script
        shell: bash 
        run: |
          ansible-playbook --private-key /home/runner/.ssh/id_rsa -u saitama db.yaml


          
